@model Nop.Plugin.Widgets.BasicPlugins.Models.PredefineValues
<!DOCTYPE html>
<html>
<head>
    <title>Create Product Attribute</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css" />

    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.2.510/styles/kendo.common.min.css">
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.2.510/styles/kendo.default.min.css">
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.2.510/styles/kendo.mobile.all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/themes/base/jquery-ui.min.css" integrity="sha512-ELV+xyi8IhEApPS/pSj66+Jiw+sOT1Mqkzlh8ExXihe4zfqbWkxPRi8wptXIO9g73FSlhmquFlUOuMSoXz5IRw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tag-editor/1.0.20/jquery.tag-editor.css" integrity="sha512-FILySSY3nAOje2KkIZUxajmYnEDpcPsSjvTSBlo9jHsMXbtNongJIh75cRp9jsG5R1GYO8fYRWQ66FLbSZfTGA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* Styling for the accordion */
        .accordion {
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .accordion-header {
            background-color: #f1f1f1;
            padding: 10px;
            cursor: pointer;
        }

            .accordion-header:hover {
                background-color: #ddd;
            }

            .accordion-header.active {
                background-color: #ccc;
            }

        .accordion-content {
            padding: 10px;
            /* display: none;*/
        }
         .accordion-content.show {
                display: block;
            }

        .row {
            /* display: block !important;*/
            width: 100%;
        }

        .tox-statusbar__branding {
            display: none;
        }

        .required:after {
            content: " *";
            color: red;
        }


        .tag-editor {
            padding: 0.375rem 0.75rem;
            border: 1px solid #ced4da !important;
        }

        .testClass input {
            pointer-events: none;
        }

        .tox-statusbar__path {
            display: none !important;
        }
    </style>

</head>
<body>
    <div class="container" style="padding: 10px; max-width:1600px;">

        @using (Html.BeginForm("AddPredefineValue", "DemoProductAttribute", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="row">
                <div class="col-md-6">
                    <h4>Add predefine value </h4>
                </div>
                <div class="col-md-6">
                    <button type="submit" class="btn btn-primary text-center" style="float:right;" value="save" name="Command">Save</button>
                </div>
            </div>
            <div class="form-group">
                <div style="text-align:center;">
                    @if (ViewBag.SuccessMessage != null)
                    {
                        <label style="color:red;">@ViewBag.SuccessMessage</label>
                    }
                </div>
            </div>
            <br>
            <div class="accordion">
                <div class="accordion-header" onclick="toggleAccordion(event)"><i class="fa fa-info panel-icon"></i>Info</div>
                <div class="accordion-content">
                    @Html.HiddenFor(m => m.ProductAttributeID, new {})
                    <div class="row mb-2">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.ValueName, new { @class = "required" })
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.ValueName, new { @id = "ValueName", @class = "form-control",@autocomplete="off",@onkeydown="return Checkvalidate();"})
                            @Html.ValidationMessageFor(m => m.ValueName, "", new { @class = "text-danger pnameerror" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        @Html.LabelFor(m => m.Priceadjustment, new { @class = "col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Priceadjustment, new { @id = "Priceadjustment", @class = "form-control" ,@min="0",@onkeydown="javascript: return event.keyCode == 69 ? false : true",@onblur="if(this.value==''){this.value=0;}"})
                            @Html.ValidationMessageFor(m => m.Priceadjustment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.IsUsepercentage)
                        </div>
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.IsUsepercentage)
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        @Html.LabelFor(m => m.Weightadjustment, new { @class = "col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Weightadjustment, new { @id = "Weightadjustment", @class = "form-control" ,@min="0",@onkeydown="javascript: return event.keyCode == 69 ? false : true",@onblur="if(this.value==''){this.value=0;}"})
                            @Html.ValidationMessageFor(m => m.Weightadjustment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        @Html.LabelFor(m => m.Cost, new { @class = "col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Cost, new { @id = "Cost", @class = "form-control" ,@min="0",@onkeydown="javascript: return event.keyCode == 69 ? false : true",@onblur="if(this.value==''){this.value=0;}"})
                            @Html.ValidationMessageFor(m => m.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Ispreselected)
                        </div>
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.Ispreselected)
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        @Html.LabelFor(m => m.Displayorder, new { @class = "col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Displayorder, new { @id = "Displayorder", @class = "form-control" ,@type="number",@min="0",@onkeypress="return onlyNumberKey(event)",@onblur="if(this.value==''){this.value=0;}"})
                            @Html.ValidationMessageFor(m => m.Displayorder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.js"></script>
    <script src="https://kendo.cdn.telerik.com/2023.1.117/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2023.1.117/js/kendo.aspnetmvc.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js" integrity="sha512-57oZ/vW8ANMjR/KQ6Be9v/+/h6bq9/l3f0Oc7vn6qMqyhvPd1cvKBRWWpzu0QoneImqr2SkmO4MSqU+RpHom3Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/caret/1.3.7/jquery.caret.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tag-editor/1.0.20/jquery.tag-editor.min.js" integrity="sha512-wexRM3SVzXnR9XDRR32JUDTyDZP3XGAsrsbVl+rBMupJsHZqbUCBMxVHDDzCpvKVhJqerRYoInsRA2ySEzpYLg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>

        $(document).ready(function () { $("#Displayorder").kendoNumericTextBox({ min: 0, max: 99999999, decimals: 0, restrictDecimals: !0, format: "# " }) });
        $(document).ready(function () { $("#Priceadjustment").kendoNumericTextBox({ min: 0, max: 99999999.9999, decimals: 2, restrictDecimals: !0, format: "#.0000" }) });
        $(document).ready(function () { $("#Weightadjustment").kendoNumericTextBox({ min: 0, max: 99999999.9999, decimals: 2, restrictDecimals: !0, format: "#.0000" }) });
        $(document).ready(function () { $("#Cost").kendoNumericTextBox({ min: 0, max: 99999999.9999, decimals: 2, restrictDecimals: !0, format: "#.0000" }) });

        // JavaScript to toggle the accordion
        function toggleAccordion(event) {
            var accordionHeader = event.target;
            var accordionContent = accordionHeader.nextElementSibling;
            accordionHeader.classList.toggle("active");
            if (accordionContent.style.display === "block") {
                accordionContent.style.display = "none";
            } else {
                accordionContent.style.display = "block";
            }
        }

        function onlyNumberKey(evt) {
            var ASCIICode = (evt.which) ? evt.which : evt.keyCode
            if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))
                return false;
            return true;
        }
    </script>
</body>
</html>